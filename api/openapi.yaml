openapi: 3.0.0
info:
  title: TareaN2DISTRIBUIDOS - Library API
  description: API-first con Books, Authors y Publishers (relaciones por ID).
  version: 1.0.0
servers:
  - url: https://aesthetic-manatee-254d43.netlify.app/docs/
    description: Netlify (producción)
  - url: http://localhost:8080

paths:
  /books:
    get:
      x-swagger-router-controller: Default
      operationId: listBooks
      summary: Listar libros (con filtros, orden y paginación)
      parameters:
        - name: authorId
          in: query
          description: Filtrar por autor (ID)
          required: false
          schema:
            type: string
        - name: publisherId
          in: query
          description: Filtrar por editorial (ID)
          required: false
          schema:
            type: string
        - name: title
          in: query
          description: Coincidencia parcial en el título (case-insensitive)
          required: false
          schema:
            type: string
        - name: q
          in: query
          description: Búsqueda simple en título/idioma/authorId/publisherId
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: Campo de orden (usa prefijo '-' para descendente)
          required: false
          schema:
            type: string
            enum: [title, -title, copyright, -copyright, pages, -pages]
            default: title
        - name: limit
          in: query
          description: Tamaño de página
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 50
        - name: offset
          in: query
          description: Desplazamiento (0-based)
          required: false
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
    post:
      x-swagger-router-controller: Default
      operationId: createBook
      summary: Crear libro
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        "201":
          description: Creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        "400":
          description: Error de validación
        "409":
          description: ID duplicado

  /books/{bookId}:
    get:
      x-swagger-router-controller: Default
      operationId: getBook
      summary: Obtener libro por id
      parameters:
        - in: path
          name: bookId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        "404":
          description: No encontrado
    put:
      x-swagger-router-controller: Default
      operationId: updateBook
      summary: Actualizar libro por id
      parameters:
        - in: path
          name: bookId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        "200":
          description: Actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        "404":
          description: No encontrado
        "400":
          description: Error de validación
    delete:
      x-swagger-router-controller: Default
      operationId: deleteBook
      summary: Borrar libro por id
      parameters:
        - in: path
          name: bookId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Borrado
        "404":
          description: No encontrado

  /authors:
    get:
      x-swagger-router-controller: Default
      operationId: listAuthors
      summary: Listar autores (con filtros, orden y paginación)
      parameters:
        - name: name
          in: query
          description: Coincidencia parcial de nombre (case-insensitive)
          required: false
          schema:
            type: string
        - name: country
          in: query
          description: Coincidencia parcial de país (case-insensitive)
          required: false
          schema:
            type: string
        - name: q
          in: query
          description: Búsqueda simple en nombre/país
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: Campo de orden
          required: false
          schema:
            type: string
            enum: [name, -name, country, -country]
            default: name
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 50
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Author'
    post:
      x-swagger-router-controller: Default
      operationId: createAuthor
      summary: Crear autor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
      responses:
        "201":
          description: Creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
        "409":
          description: ID duplicado

  /authors/{authorId}:
    get:
      x-swagger-router-controller: Default
      operationId: getAuthor
      summary: Obtener autor por id
      parameters:
        - in: path
          name: authorId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
        "404":
          description: No encontrado
    put:
      x-swagger-router-controller: Default
      operationId: updateAuthor
      summary: Actualizar autor por id
      parameters:
        - in: path
          name: authorId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
      responses:
        "200":
          description: Actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
        "404":
          description: No encontrado
    delete:
      x-swagger-router-controller: Default
      operationId: deleteAuthor
      summary: Borrar autor por id
      parameters:
        - in: path
          name: authorId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Borrado
        "404":
          description: No encontrado
        "409":
          description: Conflicto (tiene libros asociados)

  /publishers:
    get:
      x-swagger-router-controller: Default
      operationId: listPublishers
      summary: Listar editoriales (con filtros, orden y paginación)
      parameters:
        - name: name
          in: query
          description: Coincidencia parcial de nombre (case-insensitive)
          required: false
          schema:
            type: string
        - name: q
          in: query
          description: Búsqueda simple en nombre
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: Campo de orden
          required: false
          schema:
            type: string
            enum: [name, -name]
            default: name
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 50
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Publisher'
    post:
      x-swagger-router-controller: Default
      operationId: createPublisher
      summary: Crear editorial
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Publisher'
      responses:
        "201":
          description: Creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publisher'
        "409":
          description: ID duplicado

  /publishers/{publisherId}:
    get:
      x-swagger-router-controller: Default
      operationId: getPublisher
      summary: Obtener editorial por id
      parameters:
        - in: path
          name: publisherId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publisher'
        "404":
          description: No encontrado
    put:
      x-swagger-router-controller: Default
      operationId: updatePublisher
      summary: Actualizar editorial por id
      parameters:
        - in: path
          name: publisherId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Publisher'
      responses:
        "200":
          description: Actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publisher'
        "404":
          description: No encontrado
    delete:
      x-swagger-router-controller: Default
      operationId: deletePublisher
      summary: Borrar editorial por id
      parameters:
        - in: path
          name: publisherId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Borrado
        "404":
          description: No encontrado
        "409":
          description: Conflicto (tiene libros asociados)

components:
  schemas:
    Book:
      type: object
      required: [id, title]
      properties:
        id:
          type: string
          example: b1
        title:
          type: string
          example: Operating System Concepts
        edition:
          type: string
          example: 9th
        copyright:
          type: integer
          example: 2012
        language:
          $ref: '#/components/schemas/Language'
        pages:
          type: integer
          example: 976
        authorId:
          type: string
          example: a1
        publisherId:
          type: string
          example: p1

    Author:
      type: object
      required: [id, name]
      properties:
        id:
          type: string
          example: a1
        name:
          type: string
          example: Abraham Silberschatz
        country:
          type: string
          example: USA

    Publisher:
      type: object
      required: [id, name]
      properties:
        id:
          type: string
          example: p1
        name:
          type: string
          example: John Wiley & Sons

    Language:
      type: string
      enum: [SPANISH, ENGLISH, FRENCH, GERMAN, ITALIAN, PORTUGUESE]
